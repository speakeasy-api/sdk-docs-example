name: Deploy

on:
  push:
    branches:
      - main  # Replace with the target branch for triggering the workflow
  workflow_dispatch:


env:
  REGISTRY: gcr.io/linen-analyst-344721
  DOCKER_REPOSITORY_OWNER: ${{ github.repository_owner }}
  REGION: us-west1

jobs:
  build-docker:
    name: Build and Push Registry Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true

      - name: Authenticate to Google Cloud 
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.DOCS_REGISTRY_SERVICE_ACCOUNT }} 

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY }} --quiet
      
      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v4.0.0
        with:
          images: ${{ env.REGISTRY }}/sdk-docs/${{ env.DOCKER_REPOSITORY_OWNER }}/${{ github.repository_name }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Construct SERVER_VERSION
        run: echo "SERVER_VERSION=$(date +'%Y-%m-%d')-$( echo $GITHUB_SHA | cut -c1-8 )" >> $GITHUB_ENV 
        shell: bash

      - name: Build Next
        run: pnpm run next:build && pnpm run export

      - name: Build and Push Docker
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVER_VERSION=${{ env.SERVER_VERSION }}
          secrets: |
            git_auth_token=${{ secrets.BOT_REPO_TOKEN }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/sdk-docs/${{ env.DOCKER_REPOSITORY_OWNER }}/${{ github.repository_name }}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/sdk-docs/${{ env.DOCKER_REPOSITORY_OWNER }}/${{ github.repository_name }},mode=max


  # deploy-to-cloud-run:
  #   name: Deploy to Google Cloud Run
  #   runs-on: ubuntu-latest
  #   needs: build-docker
  #   steps:
  #     - name: Authenticate with Google Cloud
  #       uses: google-github-actions/auth@v0
  #       with:
  #         credentials: ${{ secrets.GCP_SA_KEY }}
  #         export_default_credentials: true

  #     - name: Set Cloud Run Service Name
  #       run: |
  #         CLOUD_RUN_SERVICE_NAME=${{ github.repository_owner }}-${{ github.repository_name }}
  #         echo "CLOUD_RUN_SERVICE_NAME=$CLOUD_RUN_SERVICE_NAME" >> $GITHUB_ENV

  #     - name: Deploy to Cloud Run
  #       run: |
  #         gcloud run deploy ${{ env.CLOUD_RUN_SERVICE_NAME }} \
  #           --image=${{ env.REGISTRY }}/sdk-docs/${{ env.DOCKER_REPOSITORY_OWNER }}/${{ github.repository_name }}:latest \
  #           --platform=managed \
  #           --region=${{ env.REGION }} \
  #           --allow-unauthenticated  # Modify as needed
