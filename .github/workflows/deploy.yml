name: Deploy

on:
  push:
    branches:
      - main  # Replace with the target branch for triggering the workflow
  workflow_dispatch:


env:
  REGISTRY: gcr.io/linen-analyst-344721
  REGION: us-west1

jobs:
  build-docker:
    name: Build and Push Registry Image
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true

      - id: "auth"
        name: Set up Google Cloud SDK
        uses: google-github-actions/auth@v0
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.DOCS_REGISTRY_SERVICE_ACCOUNT }}

      - name: Echo
        run: |
          echo '::echo::on'
          echo ${{ steps.auth.outputs.access_token }}

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io/linen-analyst-344721
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      
      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v4.0.0
        with:
          images: ${{ env.REGISTRY }}/sdk-docs/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Construct SERVER_VERSION
        run: echo "SERVER_VERSION=$(date +'%Y-%m-%d')-$( echo $GITHUB_SHA | cut -c1-8 )" >> $GITHUB_ENV 
        shell: bash

      - name: Build Next
        run: pnpm run next:build && pnpm run export

      - name: Build and Push Docker
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          file: Dockerfile
          build-platforms: |
            linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVER_VERSION=${{ env.SERVER_VERSION }}
          secrets: |
            git_auth_token=${{ secrets.BOT_REPO_TOKEN }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/sdk-docs/${{ github.repository }}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/sdk-docs/${{ github.repository }},mode=max


  deploy-to-cloud-run:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest
    needs: build-docker
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.DOCS_CLOUD_RUN_SERVICE_ACCOUNT }}

      - name: Set Cloud Run Service Name
        run: |
          CLOUD_RUN_SERVICE_NAME=${{ github.repository_owner }}-sdk-docs-example
          echo "CLOUD_RUN_SERVICE_NAME=$CLOUD_RUN_SERVICE_NAME" >> $GITHUB_ENV

      - name: Set Image Tag
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_ENV
      
      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
          image: ${{ env.REGISTRY }}/sdk-docs/${{ github.repository }}:sha-${{ env.IMAGE_TAG }}
          region: ${{ env.REGION }}
